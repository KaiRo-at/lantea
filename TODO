Tasks to complete for Lantea Maps:

Required:

* Improve tile cache:
** If cached tiles have changed, possibly also try (async) updates of other cached zoom levels covering this area
** Pre-cache tiles in adjacent areas and possibly zoom levels
*** Feature to download all maps up to a certain resolution for some area around the current point
* Improve texture cleaning algorithm
* UI improvements (non-map):
** Change general/track settings to drawer style
** Show a notification when we are loading tiles or saved data
** Display movement speed
** Display location accuracy
** Find better UI for track length/duration display
* Map/track display improvements:
** Speed up track drawing:
*** Only draw lines that are visible
*** Reduce lines to draw by eliminating unneeded detail (based on zoom level)
*** Make track drawing async and hooked up to requestAnimationFrame()
** Show a better visible marker for the current location, possibly also indicating movement direction/speed
** Smooth animations for zooming, probably using some WebGL magic
** Use available larger/smaller tiles with resizing as loading placeholders while zooming in/out
* Better GPX saving implementation [blocked by missing web APIs]
** Set file name to save into to a good default (date + maybe some location name)

Nice To Have:

* Possibility to auto-rotate map to match movement direction
* GPS details display (satellite visibility/strength) [blocked by missing web APIs]
* Magnetic compass display (using orientiation API)
* Integrate reverse geocoding, using http://wiki.openstreetmap.org/wiki/Nominatim
  e.g. http://nominatim.openstreetmap.org/reverse?format=jdon&lat=48.2051107&lon=16.3449773&zoom=14&addressdetails=1

Future Possibilities:

* Routing / Turn-by-turn navigation
* POI display
* Search address
* Mark a target location and show distance to it
